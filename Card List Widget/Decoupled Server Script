(function() {
	data.actions = {
		CHANGE_CAT: 'CHANGE_CAT',
		LOAD_MORE: 'LOAD_MORE'
	};
	
	data.categories = [];
	data.items = {list: []};
	data.invalidConfigKeys = [];
	
	//////////////////////////////////////////////////
	
	// constants
	var FLD_ID = 'sys_id';
	var MAX_ITEM_LIMIT = options.u_maximum_results < 0 ? 4 : options.u_maximum_results;
	
	var TBL_ITEMS = options.table;
	var QRY_ITEMS = options.filter;
	var QRY_SCRIPT_API = options.u_dynamic_filter_script_name;
	var QRY_SCRIPT_FUNC = options.u_dynamic_filter_method_name;
	var FLD_ITEM_NAME = options.display_field;
	var FLD_ITEM_DESC = options.u_description;
	var FLD_ITEM_SEC_TEXT = options.u_secondary_text;
	var FLD_ITEM_SEC_TEXT_LABEL = getLabelFromFieldName(options.table, options.u_secondary_text);
	var FLD_ITEM_CAT = options.u_category;
	var FLD_ITEM_IMG = options.u_image;
	
	//////////////////////////////////////////////////
	
	function addFilter(gr) {
		if (QRY_ITEMS) { gr.addEncodedQuery(QRY_ITEMS); }
		
		if (!QRY_SCRIPT_API || !QRY_SCRIPT_FUNC) { return; }
		
		try {
			var api = new global[QRY_SCRIPT_API]();
			var query = api[QRY_SCRIPT_FUNC]();
			if (!query) { return; }
			gr.addEncodedQuery(query);
		} catch(e) { 
			// unable to process dynamic script
		}
	}
	
	function getCardItems(catId, idx) {
		var gr = new GlideRecord(TBL_ITEMS);
		addFilter(gr);
		
		if (catId) {
			gr.addQuery(FLD_ITEM_CAT, catId);
		}
		
		idx = idx || 0;
		var nextIndex = idx + MAX_ITEM_LIMIT;
		gr.chooseWindow(idx, nextIndex);
		gr.query();
		
		var items = {list: []};
		
		while(gr.next()) {
			var item = {
				id: gr.getValue(FLD_ID),
				category: gr.getValue(FLD_ITEM_CAT),
				image: gr.getDisplayValue(FLD_ITEM_IMG)
			};
			
			if (FLD_ITEM_NAME) { item.name = gr.getDisplayValue(FLD_ITEM_NAME); }
			if (FLD_ITEM_DESC) { item.desc = gr.getDisplayValue(FLD_ITEM_DESC); }
			if (FLD_ITEM_SEC_TEXT) { 
					item.sec_text = FLD_ITEM_SEC_TEXT_LABEL ? 
						(FLD_ITEM_SEC_TEXT_LABEL + ': ' + gr.getDisplayValue(FLD_ITEM_SEC_TEXT)) : 
						gr.getDisplayValue(FLD_ITEM_SEC_TEXT); 
				 }
			
			items.list.push(item);
		}
		
		if (gr.getRowCount() > nextIndex) {
			items.nextIndex = nextIndex;
		}

		return items;
	}
	
	function changeCategory(catId) {
		data.items = getCardItems(catId);
	}
	
	function loadMore(req) {
		data.items = getCardItems(req.catId, req.idx);
	}
	
	function getLabelFromFieldName(tableName, fieldName){
		if(!fieldName || !tableName){
			return;
		}
		var gr = new GlideRecord(tableName);
		gr.setLimit(1);
		gr.query();
		gr.next();
		return gr[fieldName].getLabel();
	}
	
	//////////////////////////////////////////////////
	
	var handlers = {};
	handlers[data.actions.CHANGE_CAT] = changeCategory;
	handlers[data.actions.LOAD_MORE] = loadMore;
	
	function actionHandler(action) {
		action = (action || '').trim();
		if (!action) {
			throw 'valid action was not provided';
		}

		var handler = handlers[action];
		if (typeof handler !== 'function') {
			throw action + ' is not a valid action';
		}

		return handler;
	}
	
	//////////////////////////////////////////////////
	
	if (input) { // client is requesting updates
		actionHandler(input.action)(input.payload);
		return;
	}
	
	//////////////////////////////////////////////////
	
	var opts = [];
	opts.push({value: TBL_ITEMS, key: 'Table'});
	opts.push({value: FLD_ITEM_IMG, key: 'Image'});
	
	for (var i = 0; i < opts.length; i++) {
		var o = opts[i];
		if (o.value) { continue; }
		data.invalidConfigKeys.push(o.key);
	}
	
	if (data.invalidConfigKeys.length > 0) {
		return; // invalid configuration, return
	}
	
	//////////////////////////////////////////////////
	
	
	// get card items
	data.items = getCardItems();
	
	// get categories for card items
	var ga = new GlideAggregate(TBL_ITEMS);
	addFilter(ga);
	
	ga.addAggregate('COUNT', FLD_ITEM_CAT);
	ga.query();
	
	while(ga.next()) {
		var cat = ga[FLD_ITEM_CAT];
		var name = cat.getDisplayValue();
		if (!name) { continue; }
		data.categories.push({
			id: cat.getValue(FLD_ID),
			name: name
		});
	}
	
	if (data.categories.length > 0) {
		data.categories.unshift({name: 'All', active: true});
	}
})();
